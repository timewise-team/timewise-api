definitions:
  board_columns_dtos.BoardColumnsRequest:
    properties:
      name:
        type: string
      position:
        type: integer
      workspace_id:
        type: integer
    type: object
  board_columns_dtos.BoardColumnsResponse:
    properties:
      created_at:
        type: string
      deleted_at:
        type: string
      id:
        type: integer
      name:
        type: string
      position:
        type: integer
      schedules:
        items:
          $ref: '#/definitions/core_dtos.TwScheduleListInBoardColumnResponse'
        type: array
      updated_at:
        type: string
      workspace_id:
        type: integer
    type: object
  comment_dtos.CommentRequestDTO:
    properties:
      commenter:
        type: string
      content:
        type: string
      schedule_id:
        type: integer
    type: object
  comment_dtos.CommentResponseDTO:
    properties:
      commenter:
        type: string
      content:
        type: string
      created_at:
        type: string
      deleted_at:
        type: string
      id:
        type: integer
      is_deleted:
        type: boolean
      schedule_id:
        type: integer
      updated_at:
        type: string
      workspace_user_id:
        type: integer
    type: object
  comment_dtos.TwCommentResponse:
    properties:
      commenter:
        type: string
      content:
        type: string
      created_at:
        type: string
      email:
        type: string
      first_name:
        type: string
      id:
        type: integer
      is_deleted:
        type: boolean
      is_verified:
        type: boolean
      last_name:
        type: string
      profile_picture:
        type: string
      role:
        type: string
      schedule_id:
        type: integer
      status_workspace_user:
        type: string
      updated_at:
        type: string
      user_id:
        type: integer
      workspace_user_id:
        type: integer
    type: object
  core_dtos.GetUserResponseDto:
    properties:
      calendar_settings:
        type: string
      created_at:
        type: string
      deleted_at:
        type: string
      email:
        items:
          type: string
        type: array
      first_name:
        type: string
      google_id:
        type: string
      id:
        type: integer
      is_active:
        type: boolean
      is_verified:
        type: boolean
      last_login_at:
        type: string
      last_name:
        type: string
      locale:
        type: string
      notification_settings:
        type: string
      profile_picture:
        type: string
      role:
        type: string
      timezone:
        type: string
      updated_at:
        type: string
    type: object
  core_dtos.GoogleAuthRequest:
    properties:
      credentials:
        type: string
    type: object
  core_dtos.GoogleAuthResponse:
    properties:
      access_token:
        type: string
      expires_in:
        type: integer
      id_token:
        type: string
      is_new_user:
        type: boolean
      token_type:
        type: string
    type: object
  core_dtos.TwCreateScheduleRequest:
    properties:
      board_column_id:
        description: Nullable field
        type: integer
      description:
        description: Nullable field
        type: string
      title:
        description: Nullable field
        type: string
      workspace_id:
        description: Nullable field
        type: integer
      workspace_user_id:
        type: integer
    type: object
  core_dtos.TwCreateShecduleResponse:
    properties:
      board_column_id:
        type: integer
      description:
        type: string
      id:
        type: integer
      position:
        type: integer
      title:
        type: string
      workspace_id:
        type: integer
    type: object
  core_dtos.TwScheduleListInBoardColumnResponse:
    properties:
      all_day:
        type: boolean
      board_column_id:
        type: integer
      comments_count:
        type: integer
      created_at:
        type: string
      created_by:
        type: integer
      description:
        type: string
      documents_count:
        type: integer
      end_time:
        type: string
      extra_data:
        type: string
      id:
        type: integer
      is_deleted:
        type: boolean
      location:
        type: string
      position:
        type: integer
      priority:
        type: string
      recurrence_pattern:
        type: string
      schedule_participants:
        items:
          $ref: '#/definitions/schedule_participant_dtos.ScheduleParticipantInfo'
        type: array
      start_time:
        type: string
      status:
        type: string
      title:
        type: string
      updated_at:
        type: string
      video_transcript:
        type: string
      visibility:
        type: string
      workspace_id:
        type: integer
    type: object
  core_dtos.TwScheduleResponse:
    properties:
      all_day:
        type: boolean
      board_column_id:
        type: integer
      created_at:
        type: string
      created_by:
        type: integer
      description:
        type: string
      end_time:
        type: string
      extra_data:
        type: string
      id:
        type: integer
      is_deleted:
        type: boolean
      location:
        type: string
      position:
        type: integer
      priority:
        type: string
      recurrence_pattern:
        type: string
      start_time:
        type: string
      status:
        type: string
      title:
        type: string
      updated_at:
        type: string
      video_transcript:
        type: string
      visibility:
        type: string
      workspace_id:
        type: integer
    type: object
  core_dtos.TwUpdateSchedulePosition:
    properties:
      board_column_id:
        type: integer
      position:
        type: integer
    type: object
  core_dtos.TwUpdateScheduleRequest:
    properties:
      all_day:
        type: boolean
      description:
        type: string
      end_time:
        type: string
      extra_data:
        type: string
      location:
        type: string
      priority:
        description: Position          *int       `json:"position,omitempty"`
        type: string
      recurrence_pattern:
        type: string
      start_time:
        type: string
      status:
        type: string
      title:
        description: BoardColumnID     *int       `json:"board_column_id,omitempty"`
        type: string
      video_transcript:
        type: string
      visibility:
        type: string
      workspace_id:
        type: integer
    type: object
  core_dtos.TwUpdateScheduleResponse:
    properties:
      all_day:
        type: boolean
      board_column_id:
        type: integer
      created_at:
        type: string
      created_by:
        type: integer
      description:
        type: string
      end_time:
        type: string
      extra_data:
        type: string
      id:
        type: integer
      is_deleted:
        type: boolean
      location:
        type: string
      position:
        type: integer
      priority:
        type: string
      recurrence_pattern:
        type: string
      start_time:
        type: string
      status:
        type: string
      title:
        type: string
      updated_at:
        type: string
      video_transcript:
        type: string
      visibility:
        type: string
      workspace_id:
        type: integer
    type: object
  core_dtos.UpdateProfileRequestDto:
    properties:
      calendar_settings:
        type: string
      first_name:
        type: string
      last_name:
        type: string
      notification_settings:
        type: string
      profile_picture:
        type: string
    type: object
  create_workspace_dtos.CreateWorkspaceRequest:
    properties:
      description:
        type: string
      email:
        type: string
      title:
        type: string
    type: object
  create_workspace_dtos.CreateWorkspaceResponse:
    properties:
      created_at:
        type: string
      deleted_at:
        type: string
      description:
        type: string
      extra_data:
        type: string
      id:
        type: integer
      is_deleted:
        type: boolean
      key:
        type: string
      title:
        type: string
      type:
        type: string
      updated_at:
        type: string
    type: object
  document_dtos.TwDocumentResponse:
    properties:
      created_at:
        type: string
      deleted_at:
        type: string
      download_url:
        type: string
      email:
        type: string
      file_name:
        type: string
      file_path:
        type: string
      file_size:
        type: integer
      file_type:
        type: string
      first_name:
        type: string
      id:
        type: integer
      is_deleted:
        type: boolean
      is_verified:
        type: boolean
      last_name:
        type: string
      profile_picture:
        type: string
      role:
        type: string
      schedule_id:
        type: integer
      status_workspace_user:
        type: string
      updated_at:
        type: string
      uploaded_at:
        type: string
      user_id:
        type: integer
      workspace_user_id:
        type: integer
    type: object
  fiber.Error:
    properties:
      code:
        type: integer
      message:
        type: string
    type: object
  fiber.Map:
    additionalProperties: true
    type: object
  models.TwBoardColumn:
    properties:
      created_at:
        type: string
      deleted_at:
        type: string
      id:
        type: integer
      name:
        type: string
      position:
        type: integer
      updated_at:
        type: string
      workspace:
        $ref: '#/definitions/models.TwWorkspace'
      workspace_id:
        type: integer
    type: object
  models.TwUser:
    properties:
      calendarSettings:
        type: string
      created_at:
        type: string
      deleted_at:
        type: string
      email:
        type: string
      firstName:
        type: string
      googleId:
        type: string
      id:
        type: integer
      isActive:
        type: boolean
      isVerified:
        type: boolean
      lastLoginAt:
        type: string
      lastName:
        type: string
      locale:
        type: string
      notificationSettings:
        type: string
      profilePicture:
        type: string
      role:
        type: string
      timezone:
        type: string
      updated_at:
        type: string
    type: object
  models.TwUserEmail:
    properties:
      created_at:
        type: string
      deleted_at:
        type: string
      email:
        type: string
      id:
        type: integer
      status:
        type: string
      updated_at:
        type: string
      user:
        $ref: '#/definitions/models.TwUser'
      user_id:
        type: integer
    type: object
  models.TwWorkspace:
    properties:
      created_at:
        type: string
      deleted_at:
        type: string
      description:
        type: string
      extra_data:
        type: string
      id:
        type: integer
      is_deleted:
        type: boolean
      key:
        type: string
      title:
        type: string
      type:
        type: string
      updated_at:
        type: string
    type: object
  models.TwWorkspaceUser:
    properties:
      created_at:
        type: string
      deleted_at:
        type: string
      extra_data:
        type: string
      id:
        type: integer
      is_active:
        type: boolean
      is_verified:
        type: boolean
      role:
        type: string
      status:
        type: string
      updated_at:
        type: string
      user_email_id:
        type: integer
      userEmail:
        $ref: '#/definitions/models.TwUserEmail'
      workspace:
        $ref: '#/definitions/models.TwWorkspace'
      workspace_id:
        type: integer
      workspace_key:
        type: string
    type: object
  schedule_log_dtos.TwScheduleLogResponse:
    properties:
      action:
        type: string
      created_at:
        type: string
      description:
        type: string
      email:
        type: string
      field_changed:
        type: string
      first_name:
        type: string
      id:
        type: integer
      is_verified:
        type: boolean
      last_name:
        type: string
      new_value:
        type: string
      old_value:
        type: string
      profile_picture:
        type: string
      role:
        type: string
      schedule_id:
        type: integer
      status_workspace_user:
        type: string
      updated_at:
        type: string
      user_id:
        type: integer
      workspace_user_id:
        type: integer
    type: object
  schedule_participant_dtos.InviteToScheduleRequest:
    properties:
      email:
        type: string
      schedule_id:
        type: integer
    type: object
  schedule_participant_dtos.ScheduleParticipantInfo:
    properties:
      assign_at:
        type: string
      assign_by:
        type: integer
      email:
        type: string
      first_name:
        type: string
      id:
        type: integer
      invitation_sent_at:
        type: string
      invitation_status:
        type: string
      is_verified:
        type: boolean
      last_name:
        type: string
      profile_picture:
        type: string
      response_time:
        type: string
      role:
        type: string
      schedule_id:
        type: integer
      status:
        type: string
      status_workspace_user:
        type: string
      user_id:
        type: integer
      workspace_user_id:
        type: integer
    type: object
  schedule_participant_dtos.ScheduleParticipantResponse:
    properties:
      assign_at:
        type: string
      assign_by:
        type: integer
      id:
        type: integer
      invitation_sent_at:
        type: string
      invitation_status:
        type: string
      response_time:
        type: string
      schedule_id:
        type: integer
      status:
        type: string
      workspace_user_id:
        type: integer
    type: object
  transport.UpdateWorkspace:
    properties:
      description:
        type: string
      title:
        type: string
    type: object
  user_email_dtos.SearchUserEmailResponse:
    properties:
      email:
        type: string
      first_name:
        type: string
      id:
        type: integer
      last_name:
        type: string
      profile_picture:
        type: string
    type: object
  workspace_user_dtos.GetWorkspaceUserListResponse:
    properties:
      created_at:
        type: string
      deleted_at:
        type: string
      email:
        type: string
      extra_data:
        type: string
      first_name:
        type: string
      id:
        type: integer
      is_active:
        type: boolean
      is_verified:
        type: boolean
      last_name:
        type: string
      profile_picture:
        type: string
      role:
        type: string
      status:
        type: string
      updated_at:
        type: string
      user_email_id:
        type: integer
      workspace_id:
        type: integer
      workspace_key:
        type: string
    type: object
  workspace_user_dtos.UpdateWorkspaceUserRoleRequest:
    properties:
      email:
        type: string
      role:
        type: string
    type: object
info:
  contact: {}
  description: Timewise API
  title: timewise-api
  version: "1.0"
paths:
  /api/v1/account/user:
    get:
      consumes:
      - application/json
      description: Get user info
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/core_dtos.GetUserResponseDto'
      security:
      - bearerToken: []
      summary: Get user info
      tags:
      - account
    patch:
      consumes:
      - application/json
      description: Update user info
      parameters:
      - description: Update user info request
        in: body
        name: updateUserInfoRequest
        required: true
        schema:
          $ref: '#/definitions/core_dtos.UpdateProfileRequestDto'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/core_dtos.GetUserResponseDto'
      security:
      - bearerToken: []
      summary: Update user info
      tags:
      - account
  /api/v1/account/user/deactivate:
    post:
      consumes:
      - application/json
      description: Deactivate account
      produces:
      - application/json
      responses:
        "200":
          description: Account deactivated
          schema:
            type: string
        "400":
          description: Invalid userId
          schema:
            $ref: '#/definitions/fiber.Map'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/fiber.Map'
      security:
      - bearerToken: []
      summary: Deactivate account
      tags:
      - account
  /api/v1/account/user/emails:
    get:
      consumes:
      - application/json
      description: Get linked user emails
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              type: string
            type: array
      security:
      - bearerToken: []
      summary: Get linked user emails
      tags:
      - account
    post:
      consumes:
      - application/json
      description: Link an email
      parameters:
      - description: Link an email request
        in: body
        name: linkAnEmailRequest
        required: true
        schema:
          $ref: '#/definitions/core_dtos.GoogleAuthRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/core_dtos.GetUserResponseDto'
      security:
      - bearerToken: []
      summary: Link an email
      tags:
      - account
  /api/v1/account/user/emails/unlink:
    post:
      consumes:
      - application/json
      description: Unlink an email
      parameters:
      - description: Unlink an email request
        in: body
        name: unlinkAnEmailRequest
        required: true
        schema:
          $ref: '#/definitions/core_dtos.GoogleAuthRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/core_dtos.GetUserResponseDto'
      security:
      - bearerToken: []
      summary: Unlink an email
      tags:
      - account
  /api/v1/auth/callback:
    post:
      consumes:
      - application/json
      description: Google callback
      parameters:
      - description: Google auth request
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/core_dtos.GoogleAuthRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/core_dtos.GoogleAuthResponse'
      summary: Google callback
      tags:
      - auth
  /api/v1/board_columns:
    post:
      consumes:
      - application/json
      description: Create a board column (X-User-Email required, X-Workspace-Id required)
      parameters:
      - description: Create board column request
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/board_columns_dtos.BoardColumnsRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.TwBoardColumn'
      summary: Create a board column (X-User-Email required, X-Workspace-Id required)
      tags:
      - board_columns
  /api/v1/board_columns/{board_column_id}:
    delete:
      consumes:
      - application/json
      description: Delete a board column (X-User-Email required, X-Workspace-Id required)
      parameters:
      - description: Board column ID
        in: path
        name: board_column_id
        required: true
        type: string
      - description: User email
        in: path
        name: email
        required: true
        type: string
      - description: Workspace ID
        in: path
        name: workspace_id
        required: true
        type: string
      produces:
      - application/json
      responses: {}
      summary: Delete a board column (X-User-Email required, X-Workspace-Id required)
      tags:
      - board_columns
    put:
      consumes:
      - application/json
      description: Update a board column (X-User-Email required, X-Workspace-Id required)
      parameters:
      - description: Board column ID
        in: path
        name: board_column_id
        required: true
        type: string
      - description: Update board column request
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/board_columns_dtos.BoardColumnsRequest'
      produces:
      - application/json
      responses: {}
      summary: Update a board column (X-User-Email required, X-Workspace-Id required)
      tags:
      - board_columns
  /api/v1/board_columns/workspace/{workspace_id}:
    get:
      consumes:
      - application/json
      description: Get all board columns by workspace (X-User-Email required, X-Workspace-Id
        required)
      parameters:
      - description: Workspace ID
        in: path
        name: workspace_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              items:
                $ref: '#/definitions/board_columns_dtos.BoardColumnsResponse'
              type: array
            type: array
      summary: Get all board columns by workspace (X-User-Email required, X-Workspace-Id
        required)
      tags:
      - board_columns
  /api/v1/comment:
    post:
      consumes:
      - application/json
      description: Create a new comment
      parameters:
      - description: Comment
        in: body
        name: schedule
        required: true
        schema:
          $ref: '#/definitions/comment_dtos.CommentRequestDTO'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/comment_dtos.CommentResponseDTO'
      summary: Create a new comment
      tags:
      - comment
  /api/v1/comment/{comment_id}:
    delete:
      consumes:
      - application/json
      description: Delete a comment
      parameters:
      - description: Comment ID
        in: path
        name: comment_id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "204":
          description: No Content
      summary: Delete a comment
      tags:
      - comment
    put:
      consumes:
      - application/json
      description: Update an existing comment
      parameters:
      - description: Comment ID
        in: path
        name: comment_id
        required: true
        type: integer
      - description: Comment
        in: body
        name: schedule
        required: true
        schema:
          $ref: '#/definitions/comment_dtos.CommentRequestDTO'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/comment_dtos.CommentResponseDTO'
      summary: Update an existing comment
      tags:
      - comment
  /api/v1/comment/schedule/{schedule_id}:
    get:
      consumes:
      - application/json
      description: Get comments by schedule
      parameters:
      - description: Schedule ID
        in: path
        name: schedule_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/comment_dtos.TwCommentResponse'
            type: array
      summary: Get comments by schedule
      tags:
      - comment
  /api/v1/document/schedule/{schedule_id}:
    get:
      consumes:
      - application/json
      description: Get documents by schedule
      parameters:
      - description: Schedule ID
        in: path
        name: schedule_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/document_dtos.TwDocumentResponse'
            type: array
      summary: Get documents by schedule
      tags:
      - document
  /api/v1/schedule/schedule:
    get:
      consumes:
      - application/json
      description: Retrieve a list of schedules based on specified filter parameters.
      parameters:
      - description: Filter by Workspace ID
        in: query
        name: workspace_id
        type: integer
      - description: Filter by Board Column ID
        in: query
        name: board_column_id
        type: integer
      - description: Filter by Title (searches with LIKE)
        in: query
        name: title
        type: string
      - description: Filter by Start Time (ISO8601 format)
        in: query
        name: start_time
        type: string
      - description: Filter by End Time (ISO8601 format)
        in: query
        name: end_time
        type: string
      - description: Filter by Location (searches with LIKE)
        in: query
        name: location
        type: string
      - description: Filter by User ID of the creator
        in: query
        name: created_by
        type: integer
      - description: Filter by Status
        in: query
        name: status
        type: string
      - description: Filter by Deleted Schedules
        in: query
        name: is_deleted
        type: boolean
      - description: Filter by User ID assigned to the schedule
        in: query
        name: assigned_to
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: List of filtered schedules
          schema:
            items:
              $ref: '#/definitions/core_dtos.TwScheduleResponse'
            type: array
        "400":
          description: Invalid query parameters
          schema:
            $ref: '#/definitions/fiber.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/fiber.Error'
      security:
      - bearerToken: []
      summary: Get schedules by filter
      tags:
      - Schedule
  /api/v1/schedule_log/schedule/{scheduleId}:
    get:
      consumes:
      - application/json
      description: Get schedule logs by schedule ID
      parameters:
      - description: Schedule ID
        in: path
        name: scheduleId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/schedule_log_dtos.TwScheduleLogResponse'
            type: array
      summary: Get schedule logs by schedule ID
      tags:
      - schedule_log
  /api/v1/schedule_participant/accept-invitation-via-email/token/{token}:
    get:
      consumes:
      - application/json
      description: Accept invitation via email
      parameters:
      - description: Token
        in: path
        name: token
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Schedule invitation accepted successfully
          schema:
            additionalProperties: true
            type: object
        "401":
          description: Token expired or invalid
          schema:
            additionalProperties: true
            type: object
        "404":
          description: Schedule user not found
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: true
            type: object
      summary: Accept invitation via email
      tags:
      - ScheduleParticipant
  /api/v1/schedule_participant/assign:
    put:
      consumes:
      - application/json
      description: Send invitation to user (X-User-Email required, X-Workspace-Id
        required)
      parameters:
      - description: Request body
        in: body
        name: schedule_participant
        required: true
        schema:
          $ref: '#/definitions/schedule_participant_dtos.InviteToScheduleRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/schedule_participant_dtos.ScheduleParticipantResponse'
      summary: Assign member to schedule
      tags:
      - ScheduleParticipant
  /api/v1/schedule_participant/decline-invitation-via-email/token/{token}:
    get:
      consumes:
      - application/json
      description: Decline invitation via email
      parameters:
      - description: Token
        in: path
        name: token
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Invitation declined successfully
          schema:
            additionalProperties: true
            type: object
        "401":
          description: Invalid or expired token
          schema:
            additionalProperties: true
            type: object
        "404":
          description: Schedule user not found
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: true
            type: object
      summary: Decline invitation via email
      tags:
      - ScheduleParticipant
  /api/v1/schedule_participant/invite:
    post:
      consumes:
      - application/json
      description: Send invitation to user (X-User-Email required, X-Workspace-Id
        required)
      parameters:
      - description: Request body
        in: body
        name: schedule_participant
        required: true
        schema:
          $ref: '#/definitions/schedule_participant_dtos.InviteToScheduleRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/schedule_participant_dtos.ScheduleParticipantResponse'
      summary: Send invitation to user
      tags:
      - ScheduleParticipant
  /api/v1/schedule_participant/schedule/{scheduleId}:
    get:
      consumes:
      - application/json
      description: Get schedule participants by schedule ID
      parameters:
      - description: Schedule ID
        in: path
        name: scheduleId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/schedule_participant_dtos.ScheduleParticipantInfo'
            type: array
      summary: Get schedule participants by schedule ID
      tags:
      - schedule_participant
  /api/v1/schedules:
    post:
      consumes:
      - application/json
      description: Create a new schedule
      parameters:
      - description: Schedule
        in: body
        name: schedule
        required: true
        schema:
          $ref: '#/definitions/core_dtos.TwCreateScheduleRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/core_dtos.TwCreateShecduleResponse'
      summary: Create a new schedule
      tags:
      - schedule
  /api/v1/schedules/{schedule_id}:
    delete:
      consumes:
      - application/json
      description: Delete a schedule
      parameters:
      - description: Schedule ID
        in: path
        name: schedule_id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "204":
          description: No Content
      summary: Delete a schedule
      tags:
      - schedule
    get:
      consumes:
      - application/json
      description: Get schedule by ID
      parameters:
      - description: Schedule ID
        in: path
        name: schedule_id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/core_dtos.TwScheduleResponse'
      summary: Get schedule by ID
      tags:
      - schedule
    put:
      consumes:
      - application/json
      description: Update an existing schedule
      parameters:
      - description: Schedule ID
        in: path
        name: schedule_id
        required: true
        type: integer
      - description: Schedule
        in: body
        name: schedule
        required: true
        schema:
          $ref: '#/definitions/core_dtos.TwUpdateScheduleRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/core_dtos.TwUpdateScheduleResponse'
      summary: Update an existing schedule
      tags:
      - schedule
  /api/v1/schedules/position/{schedule_id}:
    put:
      consumes:
      - application/json
      description: Update an existing schedule position
      parameters:
      - description: Schedule ID
        in: path
        name: schedule_id
        required: true
        type: integer
      - description: Schedule
        in: body
        name: schedule
        required: true
        schema:
          $ref: '#/definitions/core_dtos.TwUpdateSchedulePosition'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/core_dtos.TwUpdateScheduleResponse'
      summary: Update an existing schedule position
      tags:
      - schedule
  /api/v1/user_email/search-user_email/{query}:
    get:
      consumes:
      - application/json
      description: search user email
      parameters:
      - description: query
        in: path
        name: query
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/user_email_dtos.SearchUserEmailResponse'
            type: array
      summary: search user email
      tags:
      - User Email
  /api/v1/workspace/create-workspace:
    post:
      consumes:
      - application/json
      description: Create a workspace
      parameters:
      - description: Create workspace request
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/create_workspace_dtos.CreateWorkspaceRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/create_workspace_dtos.CreateWorkspaceResponse'
      summary: Create a workspace
      tags:
      - workspace
  /api/v1/workspace/delete-workspace:
    delete:
      consumes:
      - application/json
      description: Delete a workspace (X-User-Email required, X-Workspace-Id required)
      parameters:
      - description: User Email
        in: header
        name: X-User-Email
        required: true
        type: string
      - description: Workspace ID
        in: header
        name: X-Workspace-Id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/fiber.Map'
      security:
      - bearerToken: []
      - bearerToken: []
      summary: Delete a workspace (X-User-Email required, X-Workspace-Id required)
      tags:
      - workspace
  /api/v1/workspace/filter-workspaces:
    get:
      consumes:
      - application/json
      description: Filter workspaces
      parameters:
      - description: Email
        in: query
        name: email
        type: string
      - description: Role
        in: query
        name: role
        type: string
      - description: Search
        in: query
        name: search
        type: string
      - description: Sort by
        in: query
        name: sortBy
        type: string
      - description: Order
        in: query
        name: order
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.TwWorkspace'
            type: array
      security:
      - bearerToken: []
      summary: Filter workspaces
      tags:
      - workspace
  /api/v1/workspace/get-workspace-by-id/{workspace_id}:
    get:
      consumes:
      - application/json
      description: Get a workspace by ID
      parameters:
      - description: Workspace ID
        in: path
        name: workspace_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.TwWorkspace'
      security:
      - bearerToken: []
      summary: Get a workspace by ID
      tags:
      - workspace
  /api/v1/workspace/get-workspaces-by-email/{email}:
    get:
      consumes:
      - application/json
      description: Get workspaces by email
      parameters:
      - description: Email
        in: path
        name: email
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.TwWorkspace'
            type: array
      summary: Get workspaces by email
      tags:
      - workspace
  /api/v1/workspace/update-workspace:
    put:
      consumes:
      - application/json
      description: Update a workspace (X-User-Email required, X-Workspace-Id required)
      parameters:
      - description: User Email
        in: header
        name: X-User-Email
        required: true
        type: string
      - description: Workspace ID
        in: header
        name: X-Workspace-Id
        required: true
        type: string
      - description: Workspace
        in: body
        name: workspace
        required: true
        schema:
          $ref: '#/definitions/transport.UpdateWorkspace'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.TwWorkspace'
      security:
      - bearerToken: []
      summary: Update a workspace (X-User-Email required, X-Workspace-Id required)
      tags:
      - workspace
  /api/v1/workspace_user/accept-invitation-via-email/token/{token}:
    get:
      consumes:
      - application/json
      description: Accept invitation via email
      parameters:
      - description: Token
        in: path
        name: token
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Workspace invitation accepted successfully
          schema:
            additionalProperties: true
            type: object
        "401":
          description: Token expired or invalid
          schema:
            additionalProperties: true
            type: object
        "404":
          description: Workspace user not found
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: true
            type: object
      summary: Accept invitation via email
      tags:
      - WorkspaceUser
  /api/v1/workspace_user/decline-invitation-via-email/token/{token}:
    get:
      consumes:
      - application/json
      description: Decline invitation via email
      parameters:
      - description: Token
        in: path
        name: token
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Invitation declined successfully
          schema:
            additionalProperties: true
            type: object
        "401":
          description: Invalid or expired token
          schema:
            additionalProperties: true
            type: object
        "404":
          description: Workspace user not found
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: true
            type: object
      summary: Decline invitation via email
      tags:
      - WorkspaceUser
  /api/v1/workspace_user/delete-workspace_user/workspace_user_id/{workspace_user_id}:
    delete:
      parameters:
      - description: workspace_user_id
        in: path
        name: workspace_user_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/fiber.Map'
      summary: Delete workspace user (X-User-Email required, X-Workspace-Id required)
      tags:
      - WorkspaceUser
  /api/v1/workspace_user/disprove-invitation:
    put:
      consumes:
      - application/json
      description: Disprove member's request invitation (X-User-Email required, X-Workspace-Id
        required)
      parameters:
      - description: Request body
        in: body
        name: schedule_participant
        required: true
        schema:
          $ref: '#/definitions/schedule_participant_dtos.InviteToScheduleRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/schedule_participant_dtos.ScheduleParticipantResponse'
      summary: Disprove member's request invitation (X-User-Email required, X-Workspace-Id
        required)
      tags:
      - WorkspaceUser
  /api/v1/workspace_user/get-workspace_user/email/{email}/workspace_id/{workspace_id}:
    get:
      parameters:
      - description: Email
        in: path
        name: email
        required: true
        type: string
      - description: Workspace ID
        in: path
        name: workspace_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.TwWorkspaceUser'
      summary: Get workspace user by email and workspace
      tags:
      - WorkspaceUser
  /api/v1/workspace_user/get-workspace_user_invitation_not_verified_list:
    get:
      consumes:
      - application/json
      description: Get workspace user invitation not verified list (X-User-Email required,
        X-Workspace-Id required)
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/workspace_user_dtos.GetWorkspaceUserListResponse'
            type: array
      summary: Get workspace user invitation not verified list (X-User-Email required,
        X-Workspace-Id required)
      tags:
      - WorkspaceUser
  /api/v1/workspace_user/send-invitation:
    post:
      consumes:
      - application/json
      description: Send invitation to user (X-User-Email required, X-Workspace-Id
        required)
      parameters:
      - description: Workspace user object
        in: body
        name: workspace_user
        required: true
        schema:
          $ref: '#/definitions/workspace_user_dtos.UpdateWorkspaceUserRoleRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.TwWorkspaceUser'
      summary: Send invitation to user (X-User-Email required, X-Workspace-Id required)
      tags:
      - WorkspaceUser
  /api/v1/workspace_user/update-role:
    put:
      consumes:
      - application/json
      parameters:
      - description: workspace_user_id
        in: path
        name: workspace_user_id
        required: true
        type: string
      - description: Update role request
        in: body
        name: workspace_user
        required: true
        schema:
          $ref: '#/definitions/workspace_user_dtos.UpdateWorkspaceUserRoleRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/fiber.Map'
      summary: Update role of workspace user (X-User-Email required, X-Workspace-Id
        required)
      tags:
      - WorkspaceUser
  /api/v1/workspace_user/verify-invitation:
    put:
      consumes:
      - application/json
      description: Verify member's request invitation (X-User-Email required, X-Workspace-Id
        required)
      parameters:
      - description: Request body
        in: body
        name: schedule_participant
        required: true
        schema:
          $ref: '#/definitions/schedule_participant_dtos.InviteToScheduleRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/schedule_participant_dtos.ScheduleParticipantResponse'
      summary: Verify member's request invitation (X-User-Email required, X-Workspace-Id
        required)
      tags:
      - WorkspaceUser
  /api/v1/workspace_user/workspace_user_invitation_list:
    get:
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/workspace_user_dtos.GetWorkspaceUserListResponse'
            type: array
      summary: Get workspace user invitation list (X-User-Email required, X-Workspace-Id
        required)
      tags:
      - WorkspaceUser
  /api/v1/workspace_user/workspace_user_list:
    get:
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/workspace_user_dtos.GetWorkspaceUserListResponse'
            type: array
      summary: Get workspace user list (X-User-Email required, X-Workspace-Id required)
      tags:
      - WorkspaceUser
securityDefinitions:
  bearerToken:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
