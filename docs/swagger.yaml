definitions:
  core_dtos.TwScheduleResponse:
    properties:
      all_day:
        type: boolean
      assigned_to:
        items:
          type: integer
        type: array
      board_column_id:
        type: integer
      created_at:
        type: string
      created_by:
        type: integer
      description:
        type: string
      end_time:
        type: string
      extra_data:
        type: string
      id:
        type: integer
      is_deleted:
        type: boolean
      location:
        type: string
      recurrence_pattern:
        type: string
      start_time:
        type: string
      status:
        type: string
      title:
        type: string
      updated_at:
        type: string
      visibility:
        type: string
      workspace_id:
        type: integer
    type: object
  create_workspace_dtos.CreateWorkspaceRequest:
    properties:
      description:
        type: string
      email:
        type: string
      is_deleted:
        type: boolean
      key:
        type: string
      title:
        type: string
      type:
        type: string
    type: object
  create_workspace_dtos.CreateWorkspaceResponse:
    properties:
      created_at:
        type: string
      deleted_at:
        type: string
      description:
        type: string
      extra_data:
        type: string
      id:
        type: integer
      is_deleted:
        type: boolean
      key:
        type: string
      title:
        type: string
      type:
        type: string
      updated_at:
        type: string
    type: object
  fiber.Error:
    properties:
      code:
        type: integer
      message:
        type: string
    type: object
  models.TwUser:
    properties:
      calendarSettings:
        type: string
      created_at:
        type: string
      deleted_at:
        type: string
      email:
        type: string
      firstName:
        type: string
      googleId:
        type: string
      id:
        type: integer
      isActive:
        type: boolean
      isVerified:
        type: boolean
      lastLoginAt:
        type: string
      lastName:
        type: string
      locale:
        type: string
      notificationSettings:
        type: string
      profilePicture:
        type: string
      role:
        type: string
      timezone:
        type: string
      updated_at:
        type: string
    type: object
  models.TwUserEmail:
    properties:
      created_at:
        type: string
      deleted_at:
        type: string
      email:
        type: string
      id:
        type: integer
      updated_at:
        type: string
      user:
        $ref: '#/definitions/models.TwUser'
      user_id:
        type: integer
    type: object
  models.TwWorkspace:
    properties:
      created_at:
        type: string
      deleted_at:
        type: string
      description:
        type: string
      extra_data:
        type: string
      id:
        type: integer
      is_deleted:
        type: boolean
      key:
        type: string
      title:
        type: string
      type:
        type: string
      updated_at:
        type: string
    type: object
  transport.GoogleAuthRequest:
    properties:
      credentials:
        type: string
    type: object
  transport.GoogleAuthResponse:
    properties:
      access_token:
        type: string
      expires_in:
        type: integer
      id_token:
        type: string
      is_new_user:
        type: boolean
      linked_user_emails:
        items:
          $ref: '#/definitions/models.TwUserEmail'
        type: array
      token_type:
        type: string
    type: object
info:
  contact: {}
  description: Timewise API
  title: timewise-api
  version: "1.0"
paths:
  /api/v1/auth/callback:
    post:
      consumes:
      - application/json
      description: Google callback
      parameters:
      - description: Google auth request
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/transport.GoogleAuthRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/transport.GoogleAuthResponse'
      summary: Google callback
      tags:
      - auth
  /api/v1/schedule/schedule:
    get:
      consumes:
      - application/json
      description: Retrieve a list of schedules based on specified filter parameters.
      parameters:
      - description: Filter by Workspace ID
        in: query
        name: workspace_id
        type: integer
      - description: Filter by Board Column ID
        in: query
        name: board_column_id
        type: integer
      - description: Filter by Title (searches with LIKE)
        in: query
        name: title
        type: string
      - description: Filter by Start Time (ISO8601 format)
        in: query
        name: start_time
        type: string
      - description: Filter by End Time (ISO8601 format)
        in: query
        name: end_time
        type: string
      - description: Filter by Location (searches with LIKE)
        in: query
        name: location
        type: string
      - description: Filter by User ID of the creator
        in: query
        name: created_by
        type: integer
      - description: Filter by Status
        in: query
        name: status
        type: string
      - description: Filter by Deleted Schedules
        in: query
        name: is_deleted
        type: boolean
      - description: Filter by User ID assigned to the schedule
        in: query
        name: assigned_to
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: List of filtered schedules
          schema:
            items:
              $ref: '#/definitions/core_dtos.TwScheduleResponse'
            type: array
        "400":
          description: Invalid query parameters
          schema:
            $ref: '#/definitions/fiber.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/fiber.Error'
      summary: Get schedules by filter
      tags:
      - Schedule
  /api/v1/workspace/create-workspace:
    post:
      consumes:
      - application/json
      description: Create a workspace
      parameters:
      - description: Create workspace request
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/create_workspace_dtos.CreateWorkspaceRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/create_workspace_dtos.CreateWorkspaceResponse'
      summary: Create a workspace
      tags:
      - workspace
  /api/v1/workspace/get-workspaces-by-email/{email}:
    get:
      consumes:
      - application/json
      description: Get workspaces by email
      parameters:
      - description: Email
        in: path
        name: email
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.TwWorkspace'
            type: array
      summary: Get workspaces by email
      tags:
      - workspace
swagger: "2.0"
