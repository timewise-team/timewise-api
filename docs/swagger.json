{
    "swagger": "2.0",
    "info": {
        "description": "Timewise API",
        "title": "timewise-api",
        "contact": {},
        "version": "1.0"
    },
    "paths": {
        "/api/v1/account/user": {
            "get": {
                "security": [
                    {
                        "bearerToken": []
                    }
                ],
                "description": "Get user info",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "account"
                ],
                "summary": "Get user info",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Status",
                        "name": "status",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/core_dtos.GetUserResponseDto"
                        }
                    }
                }
            },
            "patch": {
                "security": [
                    {
                        "bearerToken": []
                    }
                ],
                "description": "Update user info",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "account"
                ],
                "summary": "Update user info",
                "parameters": [
                    {
                        "description": "Update user info request",
                        "name": "updateUserInfoRequest",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/core_dtos.UpdateProfileRequestDto"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/core_dtos.GetUserResponseDto"
                        }
                    }
                }
            }
        },
        "/api/v1/account/user/deactivate": {
            "post": {
                "security": [
                    {
                        "bearerToken": []
                    }
                ],
                "description": "Deactivate account",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "account"
                ],
                "summary": "Deactivate account",
                "responses": {
                    "200": {
                        "description": "Account deactivated",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Invalid userId",
                        "schema": {
                            "$ref": "#/definitions/fiber.Map"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/fiber.Map"
                        }
                    }
                }
            }
        },
        "/api/v1/account/user/emails": {
            "get": {
                "security": [
                    {
                        "bearerToken": []
                    }
                ],
                "description": "Get linked user emails",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "account"
                ],
                "summary": "Get linked user emails",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Status",
                        "name": "status",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/account/user/emails/link/{token}": {
            "get": {
                "description": "Action email link request",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "account"
                ],
                "summary": "Action email link request",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Token",
                        "name": "token",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/core_dtos.GetUserResponseDto"
                        }
                    }
                }
            }
        },
        "/api/v1/account/user/emails/send": {
            "post": {
                "security": [
                    {
                        "bearerToken": []
                    }
                ],
                "description": "Send link an email request",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "account"
                ],
                "summary": "Send link an email request",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Target email",
                        "name": "email",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Link email request sent",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/api/v1/account/user/emails/unlink": {
            "post": {
                "security": [
                    {
                        "bearerToken": []
                    }
                ],
                "description": "Unlink an email",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "account"
                ],
                "summary": "Unlink an email",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Email",
                        "name": "email",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/core_dtos.GetUserResponseDto"
                        }
                    }
                }
            }
        },
        "/api/v1/auth/callback": {
            "post": {
                "description": "Google callback",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Google callback",
                "parameters": [
                    {
                        "description": "Google auth request",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/core_dtos.GoogleAuthRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/core_dtos.GoogleAuthResponse"
                        }
                    }
                }
            }
        },
        "/api/v1/board_columns": {
            "post": {
                "security": [
                    {
                        "bearerToken": []
                    }
                ],
                "description": "Create a board column (X-User-Email required, X-Workspace-Id required)",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "board_columns"
                ],
                "summary": "Create a board column (X-User-Email required, X-Workspace-Id required)",
                "parameters": [
                    {
                        "description": "Create board column request",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/board_columns_dtos.BoardColumnsRequest"
                        }
                    },
                    {
                        "type": "string",
                        "description": "User email",
                        "name": "X-User-Email",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Workspace ID",
                        "name": "X-Workspace-Id",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/models.TwBoardColumn"
                        }
                    }
                }
            }
        },
        "/api/v1/board_columns/update_position/{board_column_id}": {
            "put": {
                "security": [
                    {
                        "bearerToken": []
                    }
                ],
                "description": "Update a board column position (X-User-Email required, X-Workspace-Id required)",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "board_columns"
                ],
                "summary": "Update a board column position (X-User-Email required, X-Workspace-Id required)",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Board column ID",
                        "name": "board_column_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Update board column position request",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/transport.updatePositionRequest"
                        }
                    },
                    {
                        "type": "string",
                        "description": "User email",
                        "name": "X-User-Email",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Workspace ID",
                        "name": "X-Workspace-Id",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {}
            }
        },
        "/api/v1/board_columns/workspace/{workspace_id}": {
            "get": {
                "security": [
                    {
                        "bearerToken": []
                    }
                ],
                "description": "Get all board columns by workspace (X-User-Email required, X-Workspace-Id required)",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "board_columns"
                ],
                "summary": "Get all board columns by workspace (X-User-Email required, X-Workspace-Id required)",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Workspace ID",
                        "name": "workspace_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "User email",
                        "name": "X-User-Email",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Workspace ID",
                        "name": "X-Workspace-Id",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/definitions/board_columns_dtos.BoardColumnsResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/board_columns/{board_column_id}": {
            "put": {
                "security": [
                    {
                        "bearerToken": []
                    }
                ],
                "description": "Update a board column (X-User-Email required, X-Workspace-Id required)",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "board_columns"
                ],
                "summary": "Update a board column (X-User-Email required, X-Workspace-Id required)",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Board column ID",
                        "name": "board_column_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Update board column request",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/transport.UpdateBoardColumnRequest"
                        }
                    },
                    {
                        "type": "string",
                        "description": "User email",
                        "name": "X-User-Email",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Workspace ID",
                        "name": "X-Workspace-Id",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {}
            },
            "delete": {
                "security": [
                    {
                        "bearerToken": []
                    }
                ],
                "description": "Delete a board column (X-User-Email required, X-Workspace-Id required)",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "board_columns"
                ],
                "summary": "Delete a board column (X-User-Email required, X-Workspace-Id required)",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Board column ID",
                        "name": "board_column_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "User email",
                        "name": "X-User-Email",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Workspace ID",
                        "name": "X-Workspace-Id",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {}
            }
        },
        "/api/v1/comment": {
            "post": {
                "description": "Create a new comment",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "comment"
                ],
                "summary": "Create a new comment",
                "parameters": [
                    {
                        "description": "Comment",
                        "name": "schedule",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/comment_dtos.CommentRequestDTO"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/comment_dtos.CommentResponseDTO"
                        }
                    }
                }
            }
        },
        "/api/v1/comment/schedule/{schedule_id}": {
            "get": {
                "description": "Get comments by schedule",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "comment"
                ],
                "summary": "Get comments by schedule",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Schedule ID",
                        "name": "schedule_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/comment_dtos.TwCommentResponse"
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/comment/{comment_id}": {
            "put": {
                "description": "Update an existing comment",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "comment"
                ],
                "summary": "Update an existing comment",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Comment ID",
                        "name": "comment_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Comment",
                        "name": "schedule",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/comment_dtos.CommentRequestDTO"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/comment_dtos.CommentResponseDTO"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete a comment",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "comment"
                ],
                "summary": "Delete a comment",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Comment ID",
                        "name": "comment_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                }
            }
        },
        "/api/v1/document/schedule/{schedule_id}": {
            "get": {
                "description": "Get documents by schedule",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "document"
                ],
                "summary": "Get documents by schedule",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Schedule ID",
                        "name": "schedule_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/document_dtos.TwDocumentResponse"
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/document/upload": {
            "post": {
                "security": [
                    {
                        "bearerToken": []
                    }
                ],
                "description": "Upload file with multipart/form-data and upload to Google Cloud Storage",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "document"
                ],
                "summary": "Upload file",
                "parameters": [
                    {
                        "type": "file",
                        "description": "File to upload",
                        "name": "file",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Schedule ID associated with the file",
                        "name": "scheduleId",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Workspace user ID who uploads the file",
                        "name": "wspUserId",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "File uploaded successfully",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request - Missing or invalid parameters",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error - Something went wrong during file upload",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/api/v1/schedule/schedule": {
            "get": {
                "security": [
                    {
                        "bearerToken": []
                    }
                ],
                "description": "Retrieve a list of schedules based on specified filter parameters.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Schedule"
                ],
                "summary": "Get schedules by filter",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Filter by Workspace ID",
                        "name": "workspace_id",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Filter by Board Column ID",
                        "name": "board_column_id",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter by Title (searches with LIKE)",
                        "name": "title",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter by Start Time (ISO8601 format)",
                        "name": "start_time",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter by End Time (ISO8601 format)",
                        "name": "end_time",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter by Location (searches with LIKE)",
                        "name": "location",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Filter by User ID of the creator",
                        "name": "created_by",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter by Status",
                        "name": "status",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "description": "Filter by Deleted Schedules",
                        "name": "is_deleted",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Filter by User ID assigned to the schedule",
                        "name": "assigned_to",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of filtered schedules",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/core_dtos.TwScheduleResponse"
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid query parameters",
                        "schema": {
                            "$ref": "#/definitions/fiber.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/fiber.Error"
                        }
                    }
                }
            }
        },
        "/api/v1/schedule_log/schedule/{scheduleId}": {
            "get": {
                "description": "Get schedule logs by schedule ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "schedule_log"
                ],
                "summary": "Get schedule logs by schedule ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Schedule ID",
                        "name": "scheduleId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/schedule_log_dtos.TwScheduleLogResponse"
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/schedule_participant/accept-invitation-via-email/token/{token}": {
            "get": {
                "description": "Accept invitation via email",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ScheduleParticipant"
                ],
                "summary": "Accept invitation via email",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Token",
                        "name": "token",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Schedule invitation accepted successfully",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "401": {
                        "description": "Token expired or invalid",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "404": {
                        "description": "Schedule user not found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/api/v1/schedule_participant/assign": {
            "put": {
                "description": "Send invitation to user (X-User-Email required, X-Workspace-Id required)",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ScheduleParticipant"
                ],
                "summary": "Assign member to schedule",
                "parameters": [
                    {
                        "description": "Request body",
                        "name": "schedule_participant",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/schedule_participant_dtos.InviteToScheduleRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/schedule_participant_dtos.ScheduleParticipantResponse"
                        }
                    }
                }
            }
        },
        "/api/v1/schedule_participant/decline-invitation-via-email/token/{token}": {
            "get": {
                "description": "Decline invitation via email",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ScheduleParticipant"
                ],
                "summary": "Decline invitation via email",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Token",
                        "name": "token",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Invitation declined successfully",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "401": {
                        "description": "Invalid or expired token",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "404": {
                        "description": "Schedule user not found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/api/v1/schedule_participant/invite": {
            "post": {
                "description": "Send invitation to user (X-User-Email required, X-Workspace-Id required)",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ScheduleParticipant"
                ],
                "summary": "Send invitation to user",
                "parameters": [
                    {
                        "description": "Request body",
                        "name": "schedule_participant",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/schedule_participant_dtos.InviteToScheduleRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/schedule_participant_dtos.ScheduleParticipantResponse"
                        }
                    }
                }
            }
        },
        "/api/v1/schedule_participant/schedule/{scheduleId}": {
            "get": {
                "description": "Get schedule participants by schedule ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "schedule_participant"
                ],
                "summary": "Get schedule participants by schedule ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Schedule ID",
                        "name": "scheduleId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/schedule_participant_dtos.ScheduleParticipantInfo"
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/schedules": {
            "post": {
                "description": "Create a new schedule",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "schedule"
                ],
                "summary": "Create a new schedule",
                "parameters": [
                    {
                        "description": "Schedule",
                        "name": "schedule",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/core_dtos.TwCreateScheduleRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/core_dtos.TwCreateShecduleResponse"
                        }
                    }
                }
            }
        },
        "/api/v1/schedules/position/{schedule_id}": {
            "put": {
                "description": "Update an existing schedule position",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "schedule"
                ],
                "summary": "Update an existing schedule position",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Schedule ID",
                        "name": "schedule_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Schedule",
                        "name": "schedule",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/core_dtos.TwUpdateSchedulePosition"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/core_dtos.TwUpdateScheduleResponse"
                        }
                    }
                }
            }
        },
        "/api/v1/schedules/{schedule_id}": {
            "get": {
                "description": "Get schedule by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "schedule"
                ],
                "summary": "Get schedule by ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Schedule ID",
                        "name": "schedule_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/core_dtos.TwScheduleResponse"
                        }
                    }
                }
            },
            "put": {
                "description": "Update an existing schedule",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "schedule"
                ],
                "summary": "Update an existing schedule",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Schedule ID",
                        "name": "schedule_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Schedule",
                        "name": "schedule",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/core_dtos.TwUpdateScheduleRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/core_dtos.TwUpdateScheduleResponse"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete a schedule",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "schedule"
                ],
                "summary": "Delete a schedule",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Schedule ID",
                        "name": "schedule_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                }
            }
        },
        "/api/v1/user_email/search-user_email/{query}": {
            "get": {
                "description": "search user email",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User Email"
                ],
                "summary": "search user email",
                "parameters": [
                    {
                        "type": "string",
                        "description": "query",
                        "name": "query",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/user_email_dtos.SearchUserEmailResponse"
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/workspace/create-workspace": {
            "post": {
                "description": "Create a workspace",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "workspace"
                ],
                "summary": "Create a workspace",
                "parameters": [
                    {
                        "description": "Create workspace request",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/create_workspace_dtos.CreateWorkspaceRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/create_workspace_dtos.CreateWorkspaceResponse"
                        }
                    }
                }
            }
        },
        "/api/v1/workspace/delete-workspace": {
            "delete": {
                "security": [
                    {
                        "bearerToken": []
                    },
                    {
                        "bearerToken": []
                    }
                ],
                "description": "Delete a workspace (X-User-Email required, X-Workspace-Id required)",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "workspace"
                ],
                "summary": "Delete a workspace (X-User-Email required, X-Workspace-Id required)",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User Email",
                        "name": "X-User-Email",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Workspace ID",
                        "name": "X-Workspace-Id",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/fiber.Map"
                        }
                    }
                }
            }
        },
        "/api/v1/workspace/filter-workspaces": {
            "get": {
                "security": [
                    {
                        "bearerToken": []
                    }
                ],
                "description": "Filter workspaces",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "workspace"
                ],
                "summary": "Filter workspaces",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Email",
                        "name": "email",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Role",
                        "name": "role",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Search",
                        "name": "search",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Sort by",
                        "name": "sortBy",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Order",
                        "name": "order",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.TwWorkspace"
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/workspace/get-workspace-by-id/{workspace_id}": {
            "get": {
                "security": [
                    {
                        "bearerToken": []
                    }
                ],
                "description": "Get a workspace by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "workspace"
                ],
                "summary": "Get a workspace by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Workspace ID",
                        "name": "workspace_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.TwWorkspace"
                        }
                    }
                }
            }
        },
        "/api/v1/workspace/get-workspaces-by-email/{email}": {
            "get": {
                "description": "Get workspaces by email",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "workspace"
                ],
                "summary": "Get workspaces by email",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Email",
                        "name": "email",
                        "in": "path"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.TwWorkspace"
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/workspace/update-workspace": {
            "put": {
                "security": [
                    {
                        "bearerToken": []
                    }
                ],
                "description": "Update a workspace (X-User-Email required, X-Workspace-Id required)",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "workspace"
                ],
                "summary": "Update a workspace (X-User-Email required, X-Workspace-Id required)",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User Email",
                        "name": "X-User-Email",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Workspace ID",
                        "name": "X-Workspace-Id",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "Workspace",
                        "name": "workspace",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/transport.UpdateWorkspace"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.TwWorkspace"
                        }
                    }
                }
            }
        },
        "/api/v1/workspace_user/accept-invitation-via-email/token/{token}": {
            "get": {
                "description": "Accept invitation via email",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "WorkspaceUser"
                ],
                "summary": "Accept invitation via email",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Token",
                        "name": "token",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Workspace invitation accepted successfully",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "401": {
                        "description": "Token expired or invalid",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "404": {
                        "description": "Workspace user not found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/api/v1/workspace_user/decline-invitation-via-email/token/{token}": {
            "get": {
                "description": "Decline invitation via email",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "WorkspaceUser"
                ],
                "summary": "Decline invitation via email",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Token",
                        "name": "token",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Invitation declined successfully",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "401": {
                        "description": "Invalid or expired token",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "404": {
                        "description": "Workspace user not found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/api/v1/workspace_user/delete-workspace_user/workspace_user_id/{workspace_user_id}": {
            "delete": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "WorkspaceUser"
                ],
                "summary": "Delete workspace user (X-User-Email required, X-Workspace-Id required)",
                "parameters": [
                    {
                        "type": "string",
                        "description": "workspace_user_id",
                        "name": "workspace_user_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/fiber.Map"
                        }
                    }
                }
            }
        },
        "/api/v1/workspace_user/disprove-invitation": {
            "put": {
                "description": "Disprove member's request invitation (X-User-Email required, X-Workspace-Id required)",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "WorkspaceUser"
                ],
                "summary": "Disprove member's request invitation (X-User-Email required, X-Workspace-Id required)",
                "parameters": [
                    {
                        "description": "Request body",
                        "name": "schedule_participant",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/schedule_participant_dtos.InviteToScheduleRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/schedule_participant_dtos.ScheduleParticipantResponse"
                        }
                    }
                }
            }
        },
        "/api/v1/workspace_user/get-workspace_user/email/{email}/workspace_id/{workspace_id}": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "WorkspaceUser"
                ],
                "summary": "Get workspace user by email and workspace",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Email",
                        "name": "email",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Workspace ID",
                        "name": "workspace_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.TwWorkspaceUser"
                        }
                    }
                }
            }
        },
        "/api/v1/workspace_user/get-workspace_user_invitation_not_verified_list": {
            "get": {
                "description": "Get workspace user invitation not verified list (X-User-Email required, X-Workspace-Id required)",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "WorkspaceUser"
                ],
                "summary": "Get workspace user invitation not verified list (X-User-Email required, X-Workspace-Id required)",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/workspace_user_dtos.GetWorkspaceUserListResponse"
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/workspace_user/send-invitation": {
            "post": {
                "description": "Send invitation to user (X-User-Email required, X-Workspace-Id required)",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "WorkspaceUser"
                ],
                "summary": "Send invitation to user (X-User-Email required, X-Workspace-Id required)",
                "parameters": [
                    {
                        "description": "Workspace user object",
                        "name": "workspace_user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/workspace_user_dtos.UpdateWorkspaceUserRoleRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.TwWorkspaceUser"
                        }
                    }
                }
            }
        },
        "/api/v1/workspace_user/update-role": {
            "put": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "WorkspaceUser"
                ],
                "summary": "Update role of workspace user (X-User-Email required, X-Workspace-Id required)",
                "parameters": [
                    {
                        "type": "string",
                        "description": "workspace_user_id",
                        "name": "workspace_user_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Update role request",
                        "name": "workspace_user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/workspace_user_dtos.UpdateWorkspaceUserRoleRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/fiber.Map"
                        }
                    }
                }
            }
        },
        "/api/v1/workspace_user/verify-invitation": {
            "put": {
                "description": "Verify member's request invitation (X-User-Email required, X-Workspace-Id required)",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "WorkspaceUser"
                ],
                "summary": "Verify member's request invitation (X-User-Email required, X-Workspace-Id required)",
                "parameters": [
                    {
                        "description": "Request body",
                        "name": "schedule_participant",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/schedule_participant_dtos.InviteToScheduleRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/schedule_participant_dtos.ScheduleParticipantResponse"
                        }
                    }
                }
            }
        },
        "/api/v1/workspace_user/workspace_user_invitation_list": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "WorkspaceUser"
                ],
                "summary": "Get workspace user invitation list (X-User-Email required, X-Workspace-Id required)",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/workspace_user_dtos.GetWorkspaceUserListResponse"
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/workspace_user/workspace_user_list": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "WorkspaceUser"
                ],
                "summary": "Get workspace user list (X-User-Email required, X-Workspace-Id required)",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/workspace_user_dtos.GetWorkspaceUserListResponse"
                            }
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "board_columns_dtos.BoardColumnsRequest": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                },
                "position": {
                    "type": "integer"
                },
                "workspace_id": {
                    "type": "integer"
                }
            }
        },
        "board_columns_dtos.BoardColumnsResponse": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "deleted_at": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "position": {
                    "type": "integer"
                },
                "schedules": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/core_dtos.TwScheduleListInBoardColumnResponse"
                    }
                },
                "updated_at": {
                    "type": "string"
                },
                "workspace_id": {
                    "type": "integer"
                }
            }
        },
        "comment_dtos.CommentRequestDTO": {
            "type": "object",
            "properties": {
                "commenter": {
                    "type": "string"
                },
                "content": {
                    "type": "string"
                },
                "schedule_id": {
                    "type": "integer"
                }
            }
        },
        "comment_dtos.CommentResponseDTO": {
            "type": "object",
            "properties": {
                "commenter": {
                    "type": "string"
                },
                "content": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "deleted_at": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "is_deleted": {
                    "type": "boolean"
                },
                "schedule_id": {
                    "type": "integer"
                },
                "updated_at": {
                    "type": "string"
                },
                "workspace_user_id": {
                    "type": "integer"
                }
            }
        },
        "comment_dtos.TwCommentResponse": {
            "type": "object",
            "properties": {
                "commenter": {
                    "type": "string"
                },
                "content": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "first_name": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "is_deleted": {
                    "type": "boolean"
                },
                "is_verified": {
                    "type": "boolean"
                },
                "last_name": {
                    "type": "string"
                },
                "profile_picture": {
                    "type": "string"
                },
                "role": {
                    "type": "string"
                },
                "schedule_id": {
                    "type": "integer"
                },
                "status_workspace_user": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                },
                "user_id": {
                    "type": "integer"
                },
                "workspace_user_id": {
                    "type": "integer"
                }
            }
        },
        "core_dtos.GetUserResponseDto": {
            "type": "object",
            "properties": {
                "calendar_settings": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "deleted_at": {
                    "type": "string"
                },
                "email": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "first_name": {
                    "type": "string"
                },
                "google_id": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "is_active": {
                    "type": "boolean"
                },
                "is_verified": {
                    "type": "boolean"
                },
                "last_login_at": {
                    "type": "string"
                },
                "last_name": {
                    "type": "string"
                },
                "locale": {
                    "type": "string"
                },
                "notification_settings": {
                    "type": "string"
                },
                "profile_picture": {
                    "type": "string"
                },
                "role": {
                    "type": "string"
                },
                "timezone": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "core_dtos.GoogleAuthRequest": {
            "type": "object",
            "properties": {
                "credentials": {
                    "type": "string"
                }
            }
        },
        "core_dtos.GoogleAuthResponse": {
            "type": "object",
            "properties": {
                "access_token": {
                    "type": "string"
                },
                "expires_in": {
                    "type": "integer"
                },
                "id_token": {
                    "type": "string"
                },
                "is_new_user": {
                    "type": "boolean"
                },
                "token_type": {
                    "type": "string"
                }
            }
        },
        "core_dtos.TwCreateScheduleRequest": {
            "type": "object",
            "properties": {
                "board_column_id": {
                    "description": "Nullable field",
                    "type": "integer"
                },
                "description": {
                    "description": "Nullable field",
                    "type": "string"
                },
                "title": {
                    "description": "Nullable field",
                    "type": "string"
                },
                "workspace_id": {
                    "description": "Nullable field",
                    "type": "integer"
                },
                "workspace_user_id": {
                    "type": "integer"
                }
            }
        },
        "core_dtos.TwCreateShecduleResponse": {
            "type": "object",
            "properties": {
                "board_column_id": {
                    "type": "integer"
                },
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "position": {
                    "type": "integer"
                },
                "title": {
                    "type": "string"
                },
                "workspace_id": {
                    "type": "integer"
                }
            }
        },
        "core_dtos.TwScheduleListInBoardColumnResponse": {
            "type": "object",
            "properties": {
                "all_day": {
                    "type": "boolean"
                },
                "board_column_id": {
                    "type": "integer"
                },
                "comments_count": {
                    "type": "integer"
                },
                "created_at": {
                    "type": "string"
                },
                "created_by": {
                    "type": "integer"
                },
                "description": {
                    "type": "string"
                },
                "documents_count": {
                    "type": "integer"
                },
                "end_time": {
                    "type": "string"
                },
                "extra_data": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "is_deleted": {
                    "type": "boolean"
                },
                "location": {
                    "type": "string"
                },
                "position": {
                    "type": "integer"
                },
                "priority": {
                    "type": "string"
                },
                "recurrence_pattern": {
                    "type": "string"
                },
                "schedule_participants": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/schedule_participant_dtos.ScheduleParticipantInfo"
                    }
                },
                "start_time": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                },
                "video_transcript": {
                    "type": "string"
                },
                "visibility": {
                    "type": "string"
                },
                "workspace_id": {
                    "type": "integer"
                }
            }
        },
        "core_dtos.TwScheduleResponse": {
            "type": "object",
            "properties": {
                "all_day": {
                    "type": "boolean"
                },
                "board_column_id": {
                    "type": "integer"
                },
                "created_at": {
                    "type": "string"
                },
                "created_by": {
                    "type": "integer"
                },
                "description": {
                    "type": "string"
                },
                "end_time": {
                    "type": "string"
                },
                "extra_data": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "is_deleted": {
                    "type": "boolean"
                },
                "location": {
                    "type": "string"
                },
                "position": {
                    "type": "integer"
                },
                "priority": {
                    "type": "string"
                },
                "recurrence_pattern": {
                    "type": "string"
                },
                "start_time": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                },
                "video_transcript": {
                    "type": "string"
                },
                "visibility": {
                    "type": "string"
                },
                "workspace_id": {
                    "type": "integer"
                }
            }
        },
        "core_dtos.TwUpdateSchedulePosition": {
            "type": "object",
            "properties": {
                "board_column_id": {
                    "type": "integer"
                },
                "position": {
                    "type": "integer"
                }
            }
        },
        "core_dtos.TwUpdateScheduleRequest": {
            "type": "object",
            "properties": {
                "all_day": {
                    "type": "boolean"
                },
                "description": {
                    "type": "string"
                },
                "end_time": {
                    "type": "string"
                },
                "extra_data": {
                    "type": "string"
                },
                "location": {
                    "type": "string"
                },
                "priority": {
                    "description": "Position          *int       `json:\"position,omitempty\"`",
                    "type": "string"
                },
                "recurrence_pattern": {
                    "type": "string"
                },
                "start_time": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "title": {
                    "description": "BoardColumnID     *int       `json:\"board_column_id,omitempty\"`",
                    "type": "string"
                },
                "video_transcript": {
                    "type": "string"
                },
                "visibility": {
                    "type": "string"
                },
                "workspace_id": {
                    "type": "integer"
                }
            }
        },
        "core_dtos.TwUpdateScheduleResponse": {
            "type": "object",
            "properties": {
                "all_day": {
                    "type": "boolean"
                },
                "board_column_id": {
                    "type": "integer"
                },
                "created_at": {
                    "type": "string"
                },
                "created_by": {
                    "type": "integer"
                },
                "description": {
                    "type": "string"
                },
                "end_time": {
                    "type": "string"
                },
                "extra_data": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "is_deleted": {
                    "type": "boolean"
                },
                "location": {
                    "type": "string"
                },
                "position": {
                    "type": "integer"
                },
                "priority": {
                    "type": "string"
                },
                "recurrence_pattern": {
                    "type": "string"
                },
                "start_time": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                },
                "video_transcript": {
                    "type": "string"
                },
                "visibility": {
                    "type": "string"
                },
                "workspace_id": {
                    "type": "integer"
                }
            }
        },
        "core_dtos.UpdateProfileRequestDto": {
            "type": "object",
            "properties": {
                "calendar_settings": {
                    "type": "string"
                },
                "first_name": {
                    "type": "string"
                },
                "last_name": {
                    "type": "string"
                },
                "notification_settings": {
                    "type": "string"
                },
                "profile_picture": {
                    "type": "string"
                }
            }
        },
        "create_workspace_dtos.CreateWorkspaceRequest": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                }
            }
        },
        "create_workspace_dtos.CreateWorkspaceResponse": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "deleted_at": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "extra_data": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "is_deleted": {
                    "type": "boolean"
                },
                "key": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "document_dtos.TwDocumentResponse": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "deleted_at": {
                    "type": "string"
                },
                "download_url": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "file_name": {
                    "type": "string"
                },
                "file_path": {
                    "type": "string"
                },
                "file_size": {
                    "type": "integer"
                },
                "file_type": {
                    "type": "string"
                },
                "first_name": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "is_deleted": {
                    "type": "boolean"
                },
                "is_verified": {
                    "type": "boolean"
                },
                "last_name": {
                    "type": "string"
                },
                "profile_picture": {
                    "type": "string"
                },
                "role": {
                    "type": "string"
                },
                "schedule_id": {
                    "type": "integer"
                },
                "status_workspace_user": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                },
                "uploaded_at": {
                    "type": "string"
                },
                "user_id": {
                    "type": "integer"
                },
                "workspace_user_id": {
                    "type": "integer"
                }
            }
        },
        "fiber.Error": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer"
                },
                "message": {
                    "type": "string"
                }
            }
        },
        "fiber.Map": {
            "type": "object",
            "additionalProperties": true
        },
        "models.TwBoardColumn": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "deleted_at": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "position": {
                    "type": "integer"
                },
                "updated_at": {
                    "type": "string"
                },
                "workspace": {
                    "$ref": "#/definitions/models.TwWorkspace"
                },
                "workspace_id": {
                    "type": "integer"
                }
            }
        },
        "models.TwUser": {
            "type": "object",
            "properties": {
                "calendarSettings": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "deleted_at": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "firstName": {
                    "type": "string"
                },
                "googleId": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "isActive": {
                    "type": "boolean"
                },
                "isVerified": {
                    "type": "boolean"
                },
                "lastLoginAt": {
                    "type": "string"
                },
                "lastName": {
                    "type": "string"
                },
                "locale": {
                    "type": "string"
                },
                "notificationSettings": {
                    "type": "string"
                },
                "profilePicture": {
                    "type": "string"
                },
                "role": {
                    "type": "string"
                },
                "timezone": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "models.TwUserEmail": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "deleted_at": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "status": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                },
                "user": {
                    "$ref": "#/definitions/models.TwUser"
                },
                "user_id": {
                    "type": "integer"
                }
            }
        },
        "models.TwWorkspace": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "deleted_at": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "extra_data": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "is_deleted": {
                    "type": "boolean"
                },
                "key": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "models.TwWorkspaceUser": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "deleted_at": {
                    "type": "string"
                },
                "extra_data": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "is_active": {
                    "type": "boolean"
                },
                "is_verified": {
                    "type": "boolean"
                },
                "role": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                },
                "userEmail": {
                    "$ref": "#/definitions/models.TwUserEmail"
                },
                "user_email_id": {
                    "type": "integer"
                },
                "workspace": {
                    "$ref": "#/definitions/models.TwWorkspace"
                },
                "workspace_id": {
                    "type": "integer"
                },
                "workspace_key": {
                    "type": "string"
                }
            }
        },
        "schedule_log_dtos.TwScheduleLogResponse": {
            "type": "object",
            "properties": {
                "action": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "field_changed": {
                    "type": "string"
                },
                "first_name": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "is_verified": {
                    "type": "boolean"
                },
                "last_name": {
                    "type": "string"
                },
                "new_value": {
                    "type": "string"
                },
                "old_value": {
                    "type": "string"
                },
                "profile_picture": {
                    "type": "string"
                },
                "role": {
                    "type": "string"
                },
                "schedule_id": {
                    "type": "integer"
                },
                "status_workspace_user": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                },
                "user_id": {
                    "type": "integer"
                },
                "workspace_user_id": {
                    "type": "integer"
                }
            }
        },
        "schedule_participant_dtos.InviteToScheduleRequest": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                },
                "schedule_id": {
                    "type": "integer"
                }
            }
        },
        "schedule_participant_dtos.ScheduleParticipantInfo": {
            "type": "object",
            "properties": {
                "assign_at": {
                    "type": "string"
                },
                "assign_by": {
                    "type": "integer"
                },
                "email": {
                    "type": "string"
                },
                "first_name": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "invitation_sent_at": {
                    "type": "string"
                },
                "invitation_status": {
                    "type": "string"
                },
                "is_verified": {
                    "type": "boolean"
                },
                "last_name": {
                    "type": "string"
                },
                "profile_picture": {
                    "type": "string"
                },
                "response_time": {
                    "type": "string"
                },
                "role": {
                    "type": "string"
                },
                "schedule_id": {
                    "type": "integer"
                },
                "status": {
                    "type": "string"
                },
                "status_workspace_user": {
                    "type": "string"
                },
                "user_id": {
                    "type": "integer"
                },
                "workspace_user_id": {
                    "type": "integer"
                }
            }
        },
        "schedule_participant_dtos.ScheduleParticipantResponse": {
            "type": "object",
            "properties": {
                "assign_at": {
                    "type": "string"
                },
                "assign_by": {
                    "type": "integer"
                },
                "id": {
                    "type": "integer"
                },
                "invitation_sent_at": {
                    "type": "string"
                },
                "invitation_status": {
                    "type": "string"
                },
                "response_time": {
                    "type": "string"
                },
                "schedule_id": {
                    "type": "integer"
                },
                "status": {
                    "type": "string"
                },
                "workspace_user_id": {
                    "type": "integer"
                }
            }
        },
        "transport.UpdateBoardColumnRequest": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                }
            }
        },
        "transport.UpdateWorkspace": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                }
            }
        },
        "transport.updatePositionRequest": {
            "type": "object",
            "properties": {
                "position": {
                    "type": "integer"
                }
            }
        },
        "user_email_dtos.SearchUserEmailResponse": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                },
                "first_name": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "last_name": {
                    "type": "string"
                },
                "profile_picture": {
                    "type": "string"
                }
            }
        },
        "workspace_user_dtos.GetWorkspaceUserListResponse": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "deleted_at": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "extra_data": {
                    "type": "string"
                },
                "first_name": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "is_active": {
                    "type": "boolean"
                },
                "is_verified": {
                    "type": "boolean"
                },
                "last_name": {
                    "type": "string"
                },
                "profile_picture": {
                    "type": "string"
                },
                "role": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                },
                "user_email_id": {
                    "type": "integer"
                },
                "workspace_id": {
                    "type": "integer"
                },
                "workspace_key": {
                    "type": "string"
                }
            }
        },
        "workspace_user_dtos.UpdateWorkspaceUserRoleRequest": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                },
                "role": {
                    "type": "string"
                }
            }
        }
    },
    "securityDefinitions": {
        "bearerToken": {
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    }
}